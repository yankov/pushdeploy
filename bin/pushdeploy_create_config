#!/usr/bin/env ruby

#
# This script creates a file 'after_deploy.rb' in your config directory.   
# You should run it inside of your project directory.
#                                                      

Dir.mkdir "./config" if !File.directory? './config'
                                                    
config_file = File.open "./config/after_deploy.rb", "w"
raise "A error has been occured while trying to write to $(pwd)/config/after_deploy.rb. Not enough permission?" if config_file.nil?  

config_file.write %{#!/usr/bin/env ruby

#
# This script is launched by post-receive hook when push is completed.
# The general purpose of this script is to run bundler, migration and
# other commands that you want to launch after deployment.
#
require 'rubygems'
require 'pushdeploy'

PushDeploy.new(ARGV) do
    bundle   
    migrate   
    run "touch \#{@deploy_to}/tmp/restart.txt" 
end
}

puts "\n*************************************"
puts "\e[00;32mConfig has been successfully created!\e[00m"
puts "*************************************\n"

puts "You can edit " + `pwd`.chop + "/config/after_deploy.rb to add commands that you want to run after deployment.\n\n"
`chmod 755 $(pwd)/config/after_deploy.rb` 
`git add $(pwd)/config/after_deploy.rb`